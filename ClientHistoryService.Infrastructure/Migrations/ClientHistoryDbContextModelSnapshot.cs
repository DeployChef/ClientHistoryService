// <auto-generated />
using System;
using ClientHistoryService.Infrastructure.Db;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace ClientHistoryService.Infrastructure.Migrations
{
    [DbContext(typeof(ClientHistoryDbContext))]
    partial class ClientHistoryDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("ClientHistoryService.Infrastructure.Entities.CommunicationCategoryEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Description")
                        .HasColumnName("description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("communication_category");
                });

            modelBuilder.Entity("ClientHistoryService.Infrastructure.Entities.CommunicationHistoryEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<long>("CategoryId")
                        .HasColumnName("category_id")
                        .HasColumnType("bigint");

                    b.Property<long>("ClientId")
                        .HasColumnName("client_id")
                        .HasColumnType("bigint");

                    b.Property<long>("DeliveryChannelId")
                        .HasColumnName("delivery_channel_id")
                        .HasColumnType("bigint");

                    b.Property<long?>("ManagerId")
                        .HasColumnName("manager_id")
                        .HasColumnType("bigint");

                    b.Property<string>("Message")
                        .HasColumnName("message")
                        .HasColumnType("text");

                    b.Property<string>("Product")
                        .HasColumnName("product")
                        .HasColumnType("text");

                    b.Property<DateTime?>("Received")
                        .HasColumnName("dt_received")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Route")
                        .HasColumnName("route")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Sent")
                        .HasColumnName("dt_sent")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long>("TypeId")
                        .HasColumnName("type_id")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("DeliveryChannelId");

                    b.HasIndex("TypeId");

                    b.ToTable("communication_history");
                });

            modelBuilder.Entity("ClientHistoryService.Infrastructure.Entities.CommunicationTypeEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Description")
                        .HasColumnName("description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("communication_type");
                });

            modelBuilder.Entity("ClientHistoryService.Infrastructure.Entities.DeliveryChannelEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Description")
                        .HasColumnName("description")
                        .HasColumnType("text");

                    b.Property<long>("GroupId")
                        .HasColumnName("group_id")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.ToTable("delivery_channel");
                });

            modelBuilder.Entity("ClientHistoryService.Infrastructure.Entities.DeliveryChannelGroupEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Description")
                        .HasColumnName("description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("delivery_channel_group");
                });

            modelBuilder.Entity("ClientHistoryService.Infrastructure.Entities.CommunicationHistoryEntity", b =>
                {
                    b.HasOne("ClientHistoryService.Infrastructure.Entities.CommunicationCategoryEntity", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ClientHistoryService.Infrastructure.Entities.DeliveryChannelEntity", "DeliveryChannel")
                        .WithMany()
                        .HasForeignKey("DeliveryChannelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ClientHistoryService.Infrastructure.Entities.CommunicationTypeEntity", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ClientHistoryService.Infrastructure.Entities.DeliveryChannelEntity", b =>
                {
                    b.HasOne("ClientHistoryService.Infrastructure.Entities.DeliveryChannelGroupEntity", "Group")
                        .WithMany()
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
